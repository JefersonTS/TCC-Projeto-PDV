/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerOrcamento;
import controller.ControllerOrcamentoCliente;
import controller.ControllerOrcamentoProdutos;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import controllerRelatorios.ControllerRelatorioOrcamento;
import controllerRelatorios.ControllerRelatorioVenda;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelOrcamento;
import model.ModelOrcamentoCliente;
import model.ModelOrcamentoProdutos;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasProdutos;
import util.BLDatas;
import util.BLMascaras;

/**
 *
 * @author jefer
 */
public class Vendas extends javax.swing.JFrame {

    BLDatas bLDatas = new BLDatas();
    BLMascaras bLMascaras = new BLMascaras();
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutoses = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutoses = new ArrayList<>();
    ControllerOrcamento controllerOrcamento = new ControllerOrcamento();
    ModelOrcamento modelOrcamento = new ModelOrcamento();
    ControllerOrcamentoProdutos controllerOrcamentoProdutos = new ControllerOrcamentoProdutos();
    ModelOrcamentoProdutos modelOrcamentoProdutos = new ModelOrcamentoProdutos();
    ArrayList<ModelOrcamentoProdutos> listaModelOrcamentoProdutoses = new ArrayList<>();
    ControllerOrcamentoCliente controllerOrcamentoCliente = new ControllerOrcamentoCliente();
    ArrayList<ModelOrcamentoCliente> listaModelOrcamentoClientes = new ArrayList<>();
    ControllerRelatorioOrcamento controllerRelatorioOrcamento = new ControllerRelatorioOrcamento();
    ControllerRelatorioVenda controllerRelatorioVenda = new ControllerRelatorioVenda();
    String alterarSalvar;

    /**
     * Creates new form Vendas
     */
    public Vendas() {
        initComponents();
        listarClientes();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
        carregarOrçamentos();
        carregarCodigoDoProduto();
        carregarCodigoDoCliente();
        carregarValorProduto();
        mudarFonteTabela();
        habilitaDesabilitaCampos(false);
        jTextFieldDescontoVenda.setText("0");
        jTextFieldNumeroVenda.setText("0");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        carregarIcone();
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Maiandra GD", Font.PLAIN, 35)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodigoClienteVenda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldQuantidadeVenda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCodigoProdutoVenda = new javax.swing.JTextField();
        jTextFieldNumeroVenda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonAdicionarVenda = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutosVenda = new javax.swing.JTable();
        jButtonNovoVenda = new javax.swing.JButton();
        jButtonCancelarVenda = new javax.swing.JButton();
        jButtonSalvarVenda = new javax.swing.JButton();
        jTextFieldDescontoVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldTotalLiquidoVenda = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldValorDoProdutoVenda = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldValorBrutoVenda = new javax.swing.JTextField();
        jButtonRemoverProdutoVenda = new javax.swing.JButton();
        uJComboBoxNomeClienteProdutosVenda = new componentes.UJComboBox();
        uJComboBoxNomeProdutosVenda = new componentes.UJComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldPesquisarVendas = new javax.swing.JTextField();
        jButtonPesquisarVenda = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jButtonExcluirVenda = new javax.swing.JButton();
        jButtonAlterarVenda = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPesquisarOrcamento = new javax.swing.JTextField();
        jButtonPesquisarOrcamento = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableOrcamento = new javax.swing.JTable();
        jButtonPesquisarOrcamento1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema de Vendas - Cadastro e Busca de Vendas");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel1.setText("Código do Cliente:");

        jTextFieldCodigoClienteVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldCodigoClienteVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoClienteVendaFocusLost(evt);
            }
        });
        jTextFieldCodigoClienteVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoClienteVendaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel2.setText("Nome do Cliente:");

        jLabel3.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel3.setText("Numero da Venda:");

        jTextFieldQuantidadeVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldQuantidadeVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeVendaKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel4.setText("Código do Produto:");

        jTextFieldCodigoProdutoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldCodigoProdutoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoProdutoVendaFocusLost(evt);
            }
        });
        jTextFieldCodigoProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoProdutoVendaActionPerformed(evt);
            }
        });

        jTextFieldNumeroVenda.setEditable(false);
        jTextFieldNumeroVenda.setBackground(new java.awt.Color(102, 255, 102));
        jTextFieldNumeroVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldNumeroVenda.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldNumeroVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel5.setText("Quantidade:");

        jButtonAdicionarVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonAdicionarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/carrinho-de-compras.png"))); // NOI18N
        jButtonAdicionarVenda.setText("Adicionar");
        jButtonAdicionarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarVendaActionPerformed(evt);
            }
        });

        jTableProdutosVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTableProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Quantidade", "Valor Unitario", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProdutosVenda.setRowHeight(30);
        jScrollPane1.setViewportView(jTableProdutosVenda);
        if (jTableProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jTableProdutosVenda.getColumnModel().getColumn(0).setMinWidth(150);
            jTableProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableProdutosVenda.getColumnModel().getColumn(0).setMaxWidth(150);
            jTableProdutosVenda.getColumnModel().getColumn(2).setMinWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(2).setMaxWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(3).setMinWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(3).setMaxWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(4).setMinWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        jButtonNovoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonNovoVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/papel-de-texto.png"))); // NOI18N
        jButtonNovoVenda.setText("Novo");
        jButtonNovoVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonNovoVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonNovoVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonNovoVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonNovoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoVendaActionPerformed(evt);
            }
        });

        jButtonCancelarVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonCancelarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/proibido.png"))); // NOI18N
        jButtonCancelarVenda.setText("Cancelar");
        jButtonCancelarVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCancelarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCancelarVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonCancelarVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarVendaActionPerformed(evt);
            }
        });

        jButtonSalvarVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonSalvarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/disquete.png"))); // NOI18N
        jButtonSalvarVenda.setText("Salvar");
        jButtonSalvarVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSalvarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSalvarVenda.setEnabled(false);
        jButtonSalvarVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonSalvarVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonSalvarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarVendaActionPerformed(evt);
            }
        });

        jTextFieldDescontoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldDescontoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDescontoVendaFocusLost(evt);
            }
        });
        jTextFieldDescontoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescontoVendaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel6.setText("Desconto (em %): ");

        jTextFieldTotalLiquidoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldTotalLiquidoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalLiquidoVendaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel7.setText("Valor Total:");

        jLabel9.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel9.setText("Nome do Produto:");

        jLabel10.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel10.setText("Valor:");

        jTextFieldValorDoProdutoVenda.setEditable(false);
        jTextFieldValorDoProdutoVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("R$ "))));
        jTextFieldValorDoProdutoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel11.setText("Total a Pagar:");

        jTextFieldValorBrutoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldValorBrutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValorBrutoVendaActionPerformed(evt);
            }
        });

        jButtonRemoverProdutoVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonRemoverProdutoVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/carrinho-de-compras-remover.png"))); // NOI18N
        jButtonRemoverProdutoVenda.setText("Remover");
        jButtonRemoverProdutoVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonRemoverProdutoVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRemoverProdutoVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonRemoverProdutoVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonRemoverProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverProdutoVendaActionPerformed(evt);
            }
        });

        uJComboBoxNomeClienteProdutosVenda.setAutocompletar(true);
        uJComboBoxNomeClienteProdutosVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        uJComboBoxNomeClienteProdutosVenda.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJComboBoxNomeClienteProdutosVendaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        uJComboBoxNomeProdutosVenda.setAutocompletar(true);
        uJComboBoxNomeProdutosVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        uJComboBoxNomeProdutosVenda.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJComboBoxNomeProdutosVendaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemoverProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalvarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldDescontoVenda))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldValorBrutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldTotalLiquidoVenda))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCodigoProdutoVenda))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(uJComboBoxNomeProdutosVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextFieldValorDoProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldQuantidadeVenda))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAdicionarVenda))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCodigoClienteVenda))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(uJComboBoxNomeClienteProdutosVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNumeroVenda)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigoClienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uJComboBoxNomeClienteProdutosVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCodigoProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uJComboBoxNomeProdutosVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldValorDoProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAdicionarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldDescontoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldValorBrutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldTotalLiquidoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonNovoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonCancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRemoverProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSalvarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastrar", jPanel1);

        jLabel8.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel8.setText("Pesquisar:");

        jTextFieldPesquisarVendas.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldPesquisarVendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarVendasKeyReleased(evt);
            }
        });

        jButtonPesquisarVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonPesquisarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/pesquisa.png"))); // NOI18N
        jButtonPesquisarVenda.setText("Pesquisar");
        jButtonPesquisarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPesquisarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarVendaActionPerformed(evt);
            }
        });

        jTableVendas.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código da Venda", "Nome do Cliente", "Data da Venda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVendas.setRowHeight(30);
        jScrollPane2.setViewportView(jTableVendas);
        if (jTableVendas.getColumnModel().getColumnCount() > 0) {
            jTableVendas.getColumnModel().getColumn(0).setMinWidth(250);
            jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(250);
            jTableVendas.getColumnModel().getColumn(0).setMaxWidth(250);
            jTableVendas.getColumnModel().getColumn(2).setMinWidth(200);
            jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTableVendas.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        jButtonExcluirVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonExcluirVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/cancelar.png"))); // NOI18N
        jButtonExcluirVenda.setText("Excluir");
        jButtonExcluirVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonExcluirVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonExcluirVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonExcluirVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonExcluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirVendaActionPerformed(evt);
            }
        });

        jButtonAlterarVenda.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonAlterarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/editar.png"))); // NOI18N
        jButtonAlterarVenda.setText("Alterar");
        jButtonAlterarVenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAlterarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAlterarVenda.setMaximumSize(new java.awt.Dimension(110, 110));
        jButtonAlterarVenda.setMinimumSize(new java.awt.Dimension(110, 110));
        jButtonAlterarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1212, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldPesquisarVendas))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisarVenda)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButtonAlterarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonExcluirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonPesquisarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPesquisarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAlterarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consultar/Excluir/Alterar", jPanel2);

        jLabel12.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jLabel12.setText("Pesquisar:");

        jTextFieldPesquisarOrcamento.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTextFieldPesquisarOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarOrcamentoKeyReleased(evt);
            }
        });

        jButtonPesquisarOrcamento.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonPesquisarOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/pesquisa.png"))); // NOI18N
        jButtonPesquisarOrcamento.setText("Pesquisar");
        jButtonPesquisarOrcamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPesquisarOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarOrcamentoActionPerformed(evt);
            }
        });

        jTableOrcamento.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jTableOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Orçamento", "Nome do Cliente", "Data Orçamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOrcamento.setRowHeight(30);
        jScrollPane3.setViewportView(jTableOrcamento);
        if (jTableOrcamento.getColumnModel().getColumnCount() > 0) {
            jTableOrcamento.getColumnModel().getColumn(0).setMinWidth(250);
            jTableOrcamento.getColumnModel().getColumn(0).setPreferredWidth(250);
            jTableOrcamento.getColumnModel().getColumn(0).setMaxWidth(250);
            jTableOrcamento.getColumnModel().getColumn(2).setMinWidth(200);
            jTableOrcamento.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTableOrcamento.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        jButtonPesquisarOrcamento1.setFont(new java.awt.Font("Maiandra GD", 0, 24)); // NOI18N
        jButtonPesquisarOrcamento1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/24x24/pesquisa.png"))); // NOI18N
        jButtonPesquisarOrcamento1.setText("Imprimir");
        jButtonPesquisarOrcamento1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPesquisarOrcamento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarOrcamento1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1212, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldPesquisarOrcamento))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisarOrcamento))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonPesquisarOrcamento1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonPesquisarOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPesquisarOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPesquisarOrcamento1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Orçamento", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void carregarIcone() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagens/carrinho_de_compras.png")));
    }

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        jTextFieldPesquisarVendas.requestFocus();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButtonAlterarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarVendaActionPerformed
        int linha = jTableVendas.getSelectedRow();
        if (linha > -1) {
            alterarSalvar = "ALTERAR";
            habilitaDesabilitaCampos(true);
            carregarValorProduto();
            int codigoVenda = (int) jTableVendas.getValueAt(linha, 0);
            listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            uJComboBoxNomeClienteProdutosVenda.setSelectedItem(jTableVendas.getValueAt(linha, 1));
            carregarCodigoDoCliente();
            DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
            modelo.setNumRows(0);
            for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
                jTextFieldNumeroVenda.setText(String.valueOf(listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVendas()));
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto(),
                    listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProdNome(),
                    listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade(),
                    listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor(),
                    listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()
                    * listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor()
                });
            }
            somarValorToralProdutos();
            jTabbedPane1.setSelectedIndex(0);//move entre as abas
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao Alterar a Venda, Selecione um Registro na Tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAlterarVendaActionPerformed

    private void jButtonExcluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirVendaActionPerformed
        //Excluir uma venda no banco
        int linha = jTableVendas.getSelectedRow();//pega a linha selecionada na tabela
        try {
            int codigoVenda = (int) jTableVendas.getValueAt(linha, 0);//pega a coluna 0 a linha selecionada
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutoses = new ArrayList<>();
            listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);

            for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
                modelProdutos.setProdEstoque(
                        listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProdEstoque()
                        + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()
                );
                listaModelProdutos.add(modelProdutos);
            }

            if (controllerProdutos.alterarEstoqueProdutosController(listaModelProdutos)) {
                controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
                if (controllerVendas.excluirVendasController(codigoVenda)) {
                    JOptionPane.showMessageDialog(this, "Venda Excluida com SUCESSO", "ERRO", JOptionPane.WARNING_MESSAGE);
                    carregarVendas();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Excluir a Venda", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao Excluir a Venda, Selecione um Registro na tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonExcluirVendaActionPerformed

    private void jButtonPesquisarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarVendaActionPerformed
        // TODO add your handling code here:
        pesquisarVendas();
    }//GEN-LAST:event_jButtonPesquisarVendaActionPerformed

    private void jTextFieldPesquisarVendasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarVendasKeyReleased
        // TODO add your handling code here:
        pesquisarVendas();
    }//GEN-LAST:event_jTextFieldPesquisarVendasKeyReleased

    private void uJComboBoxNomeProdutosVendaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJComboBoxNomeProdutosVendaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (uJComboBoxNomeProdutosVenda.isPopupVisible()) {
            modelProdutos = controllerProdutos.getProdutoController(uJComboBoxNomeProdutosVenda.getSelectedItem().toString());
            jTextFieldCodigoProdutoVenda.setText(String.valueOf(modelProdutos.getIdProduto()));
            carregarValorProduto();
        }
    }//GEN-LAST:event_uJComboBoxNomeProdutosVendaPopupMenuWillBecomeInvisible

    private void uJComboBoxNomeClienteProdutosVendaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJComboBoxNomeClienteProdutosVendaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (uJComboBoxNomeClienteProdutosVenda.isPopupVisible()) {
            modelCliente = controllerCliente.getClienteController(uJComboBoxNomeClienteProdutosVenda.getSelectedItem().toString());
            jTextFieldCodigoClienteVenda.setText(String.valueOf(modelCliente.getIdCliente()));
        }
    }//GEN-LAST:event_uJComboBoxNomeClienteProdutosVendaPopupMenuWillBecomeInvisible

    private void jButtonRemoverProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverProdutoVendaActionPerformed
        int linha = jTableProdutosVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
        modelo.removeRow(linha);
        somarValorToralProdutos();
    }//GEN-LAST:event_jButtonRemoverProdutoVendaActionPerformed

    private void jTextFieldValorBrutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValorBrutoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorBrutoVendaActionPerformed

    private void jTextFieldTotalLiquidoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalLiquidoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalLiquidoVendaActionPerformed

    private void jTextFieldDescontoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescontoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescontoVendaActionPerformed

    private void jTextFieldDescontoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDescontoVendaFocusLost
        // TODO add your handling code here:
        somarValorToralProdutos();
    }//GEN-LAST:event_jTextFieldDescontoVendaFocusLost

    @SuppressWarnings("empty-statement")
    private void jButtonSalvarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarVendaActionPerformed
        //else if para verificar se a tabela é vazia e mostrar uma mensagem
        if (jTableProdutosVenda.getRowCount() > 0) {
            Object[] options = {alterarSalvar, "ORÇAR"};//arrey para mostrar as opções no JOptionPane.showOptionDialog
            int x = JOptionPane.showOptionDialog(null, "O Que Deseja Fazer ?",
                    "Venda ou Orçamento ?",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
            if (x == 0) {
                int codigoVenda, codigoProduto = 0, qtdVenda = 0;
                listaModelVendasProdutoses = new ArrayList<>();
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                /*
                 IF para ver se o numero da venda nao é vazio para nao dar erro quando for alterar a venda
                 pois para alterar precisa do ID da Venda
                 */
                if (!jTextFieldNumeroVenda.equals("")) {
                    modelVendas.setIdVenda(Integer.parseInt(jTextFieldNumeroVenda.getText()));
                }
                modelVendas.setCliente(Integer.parseInt(jTextFieldCodigoClienteVenda.getText()));
                /*
                 try catch para tratar a data, pois no banco só aceita no formato americano
                 */
                try {
                    modelVendas.setVenDataVenda(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
                } catch (Exception e) {
                    //Logger.getLogger(Vendas.class.getName()).log(Level.SEVERE, null, ex);
                }
                modelVendas.setVenValorLiquido(bLMascaras.arredondamentoComPontoDuasCasasDouble(Double.parseDouble(jTextFieldTotalLiquidoVenda.getText())));
                modelVendas.setVenValorBruto(bLMascaras.arredondamentoComPontoDuasCasasDouble(Double.parseDouble(jTextFieldValorBrutoVenda.getText())));
                modelVendas.setVenDesconto(Double.parseDouble(jTextFieldDescontoVenda.getText()));

                /*
                 Aqui é onde entro no metodo de salvar ou alterar
                 */
                if (alterarSalvar.equals("SALVAR")) {
                    //SALVAR UMA NOVA VENDA NO BANCO
                    codigoVenda = controllerVendas.salvarVendasController(modelVendas);
                    if (codigoVenda > 0) {
                        JOptionPane.showMessageDialog(this, "Venda Concluida com SUCESSO", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao Concluir a Venda", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }

                    //Apenas percorrer o vetor para pegar os dados do produto
                    int cont = jTableProdutosVenda.getRowCount();//pega quantas linhas tem na tabela
                    for (int i = 0; i < cont; i++) {
                        codigoProduto = (int) jTableProdutosVenda.getValueAt(i, 0);
                        qtdVenda = Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString());
                        modelVendasProdutos = new ModelVendasProdutos();
                        modelProdutos = new ModelProdutos();
                        modelVendasProdutos.setProduto(codigoProduto);
                        modelVendasProdutos.setVendas(codigoVenda);
                        modelVendasProdutos.setVenProValor((double) jTableProdutosVenda.getValueAt(i, 3));
                        modelVendasProdutos.setVenProQuantidade(qtdVenda);
                        listaModelVendasProdutoses.add(modelVendasProdutos);
                        //subtrai a quantidade vendida no estoque
                        modelProdutos.setIdProduto(codigoProduto);
                        modelProdutos.setProdEstoque(controllerProdutos.getProdutosController(codigoProduto).getProdEstoque()
                                - qtdVenda);
                        listaModelProdutos.add(modelProdutos);
                    }

                    //salvar os produtos da venda na tb_vendas_produtos
                    if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses)) {
                        controllerProdutos.alterarEstoqueProdutosController(listaModelProdutos);//Alterar o estoque no banco
                        limparVendas();
                        carregarVendas();
                        habilitaDesabilitaCampos(false);
                        // INICIO - Mensagem com a opção para imprimir a venda
                        Object[] opt = {"SIM", "NÃO"};//arrey para mostrar as opções no JOptionPane.showOptionDialog
                        int y = JOptionPane.showOptionDialog(null, "Deseja Imprimir a Venda ?",
                                "O Que Deseja Fazer ?",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opt, opt[0]);
                        if (y == 0) {
                            int codigo = Integer.parseInt(jTextFieldCodigoClienteVenda.getText());
                            String data = String.valueOf(modelVendas.getVenDataVenda());
                            //Chamar a função que vai imprimir a venda, passando o codigo do cliente, data da venda e codigo da venda
                            controllerRelatorioVenda.gerarRelatorioUmaVendaPorClienteController(codigo, data, codigoVenda);
                        }
                        // FIM - Mensagem com a opção para imprimir a venda
                    }
                } //ALTERAR UMA VENDA JA CONCLUIDA
                else if (alterarSalvar.equals("ALTERAR")) {
                    try {
                        modelVendasProdutos = new ModelVendasProdutos();
                        //INICIO -> retornar os produtos para o estoque e excluir os produtos da venda
                        codigoVenda = Integer.parseInt(jTextFieldNumeroVenda.getText());
                        listaModelProdutos = new ArrayList<>();
                        listaModelProdutosVendasProdutoses = new ArrayList<>();
                        listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);

                        for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
                            modelProdutos = new ModelProdutos();
                            modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
                            modelProdutos.setProdEstoque(
                                    listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProdEstoque()
                                    + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()
                            );
                            listaModelProdutos.add(modelProdutos);
                        }

                        if (controllerProdutos.alterarEstoqueProdutosController(listaModelProdutos)) {
                            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
                            carregarVendas();
                        }
                        //FIM -> retornar os produtos para o estoque e excluir os produtos da venda

                        controllerVendas.atualizarVendasController(modelVendas);

                        int cont = jTableProdutosVenda.getRowCount();//pega quantas linhas tem na tabela
                        for (int i = 0; i < cont; i++) {
                            codigoProduto = (int) jTableProdutosVenda.getValueAt(i, 0);
                            qtdVenda = Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString());
                            modelVendasProdutos = new ModelVendasProdutos();
                            modelProdutos = new ModelProdutos();
                            modelVendasProdutos.setProduto(codigoProduto);
                            modelVendasProdutos.setVendas(codigoVenda);
                            modelVendasProdutos.setVenProValor((double) jTableProdutosVenda.getValueAt(i, 3));
                            modelVendasProdutos.setVenProQuantidade(qtdVenda);
                            //subtrai a quantidade vendida no estoque
                            modelProdutos.setIdProduto(codigoProduto);
                            modelProdutos.setProdEstoque(controllerProdutos.getProdutosController(codigoProduto).getProdEstoque()
                                    - qtdVenda);
                            listaModelVendasProdutoses.add(modelVendasProdutos);
                            listaModelProdutos.add(modelProdutos);
                        }
                        //Salvar os produtos da alteração da venda
                        controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses);//Salva as vendas na tb_vendas_produtos
                        controllerProdutos.alterarEstoqueProdutosController(listaModelProdutos);// atualiza o estoque na tb_produto
                        carregarVendas();
                        limparVendas();
                        habilitaDesabilitaCampos(false);
                        JOptionPane.showMessageDialog(this, "Venda Alterada com SUCESSO", "SUCESSO", JOptionPane.WARNING_MESSAGE);
                        Object[] opt = {"SIM", "NÃO"};//arrey para mostrar as opções no JOptionPane.showOptionDialog
                        int y = JOptionPane.showOptionDialog(null, "Deseja Imprimir a Venda ?",
                                "O Que Deseja Fazer ?",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opt, opt[0]);
                        if (y == 0) {
                            int codigo = Integer.parseInt(jTextFieldCodigoClienteVenda.getText());
                            String data = String.valueOf(modelVendas.getVenDataVenda());
                            //Chamar a função que vai imprimir a venda, passando o codigo do cliente, data da venda e codigo da venda
                            controllerRelatorioVenda.gerarRelatorioUmaVendaPorClienteController(codigo, data, codigoVenda);
                            System.err.println("codigoVenda: " + codigoVenda + "/ndata: " + data + "/ncodigo cliente:" + codigo);
                        }
                        // FIM - Mensagem com a opção para imprimir a venda
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Erro ao Alterar a Venda", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {//else pertencente ao JOptionPane.showOptionDialog
                int codigoOrcamento;
                modelOrcamento = new ModelOrcamento();
                //Inicio - Salvando os dados do orçamento na tb_orcamento
                modelOrcamento.setIdCliente(Integer.parseInt(String.valueOf(jTextFieldCodigoClienteVenda.getText())));
                //try catch para tratar a data, pois no banco só aceita no formato americano
                try {
                    modelOrcamento.setDataOrcamento(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
                } catch (Exception e) {
                    //Logger.getLogger(Vendas.class.getName()).log(Level.SEVERE, null, ex);
                }
                modelOrcamento.setValorLiquidoOrcamento(Double.parseDouble(String.valueOf(jTextFieldTotalLiquidoVenda.getText())));
                modelOrcamento.setValorBrutoOrcamento(Double.parseDouble(String.valueOf(jTextFieldValorBrutoVenda.getText())));
                modelOrcamento.setDescontoOrcamento(Integer.parseInt(String.valueOf(jTextFieldDescontoVenda.getText())));
                //SALVAR UM NOVO OÇAMENTO NA tb_orcamento
                codigoOrcamento = controllerOrcamento.salvarOrcamentoController(modelOrcamento); //Salva os Dados do orçamento e se for maior que zero está salvo
                if (codigoOrcamento > 0) {
                    JOptionPane.showMessageDialog(this, "Orçamento Salvo com SUCESSO", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao Salvar Orçamento", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                //FIM - Salvando os dados do orçamento na tb_orcamento
                //Inicio - Percorrer o vetor para pegar os dados do produtos para salvar na tb_orcamento_produtos
                int cont = jTableProdutosVenda.getRowCount();//pega quantas linhas tem na tabela
                for (int i = 0; i < cont; i++) {
                    int codigoProduto = (int) jTableProdutosVenda.getValueAt(i, 0);
                    int qtdProduto = Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString());
                    modelOrcamentoProdutos = new ModelOrcamentoProdutos();
                    modelOrcamentoProdutos.setIdProduto(codigoProduto);
                    modelOrcamentoProdutos.setIdOrcamento(codigoOrcamento);
                    modelOrcamentoProdutos.setValorProduto(Double.parseDouble(String.valueOf(jTableProdutosVenda.getValueAt(i, 3))));
                    modelOrcamentoProdutos.setQtdProduto(qtdProduto);
                    listaModelOrcamentoProdutoses.add(modelOrcamentoProdutos);
                }
                controllerOrcamentoProdutos.salvarOrcamentoProdutosController(listaModelOrcamentoProdutoses);
                limparVendas();
                carregarVendas();
                habilitaDesabilitaCampos(false);

                carregarOrçamentos();
                controllerRelatorioOrcamento.gerarRelatorioOrcamentoController(codigoOrcamento);
            }

        } else {//else ir para verificar se a tabela é vazia e mostrar uma mensagem
            JOptionPane.showMessageDialog(this, "Nenhum Produto na Tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSalvarVendaActionPerformed

    private void jButtonCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarVendaActionPerformed
        habilitaDesabilitaCampos(false);
        limparVendas();
    }//GEN-LAST:event_jButtonCancelarVendaActionPerformed

    private void jButtonNovoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoVendaActionPerformed
        alterarSalvar = "SALVAR";
        jButtonSalvarVenda.setEnabled(true);
        limparVendas();
        habilitaDesabilitaCampos(true);
        carregarValorProduto();
    }//GEN-LAST:event_jButtonNovoVendaActionPerformed

    private void jButtonAdicionarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarVendaActionPerformed
        adicionarVenda();
    }//GEN-LAST:event_jButtonAdicionarVendaActionPerformed

    private void jTextFieldCodigoProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoProdutoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoProdutoVendaActionPerformed

    private void jTextFieldCodigoProdutoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoProdutoVendaFocusLost
        // TODO add your handling code here:.
        modelProdutos = controllerProdutos.getProdutosController(Integer.parseInt(jTextFieldCodigoProdutoVenda.getText()));
        uJComboBoxNomeProdutosVenda.setSelectedItem(modelProdutos.getProdNome());
        carregarValorProduto();
    }//GEN-LAST:event_jTextFieldCodigoProdutoVendaFocusLost

    private void jTextFieldQuantidadeVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeVendaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            adicionarVenda();
        }
    }//GEN-LAST:event_jTextFieldQuantidadeVendaKeyPressed

    private void jTextFieldCodigoClienteVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoClienteVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoClienteVendaActionPerformed

    private void jTextFieldCodigoClienteVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoClienteVendaFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jTextFieldCodigoClienteVenda.getText()));
        uJComboBoxNomeClienteProdutosVenda.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jTextFieldCodigoClienteVendaFocusLost

    private void jButtonPesquisarOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarOrcamentoActionPerformed
        // TODO add your handling code here:
        pesquisarOrcamento();
    }//GEN-LAST:event_jButtonPesquisarOrcamentoActionPerformed

    private void jTextFieldPesquisarOrcamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarOrcamentoKeyReleased
        // TODO add your handling code here:
        pesquisarOrcamento();
    }//GEN-LAST:event_jTextFieldPesquisarOrcamentoKeyReleased

    private void jButtonPesquisarOrcamento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarOrcamento1ActionPerformed
        // TODO add your handling code here:
        try {
            int linha = jTableOrcamento.getSelectedRow();
            int codigo = (int) jTableOrcamento.getValueAt(linha, 0);
            controllerRelatorioOrcamento.gerarRelatorioOrcamentoController(codigo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Selecione um Orçamento!", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonPesquisarOrcamento1ActionPerformed

    private void adicionarVenda() {
        if (jTextFieldQuantidadeVenda.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ERRO ao adicionar a Venda, QUANTIDADE vazio!", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        } else {
            modelProdutos = controllerProdutos.getProdutosController(Integer.parseInt(jTextFieldCodigoProdutoVenda.getText()));
            //adiciona uma linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
            int cont = 0;
            double qtde = Double.parseDouble(jTextFieldQuantidadeVenda.getText());
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getProdNome(),
                jTextFieldQuantidadeVenda.getText(),
                modelProdutos.getProdValor(),
                qtde * modelProdutos.getProdValor(),});
            somarValorToralProdutos();
        }
    }

    //Lista os clientes para preencher o uJComboBoxNomeClienteProdutosVenda
    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        uJComboBoxNomeClienteProdutosVenda.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            uJComboBoxNomeClienteProdutosVenda.addItem(listaModelClientes.get(i).getCliNome());
        }
    }

    //Lista os clientes para preencher o uJComboBoxNomeProdutosVenda
    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutosController();
        uJComboBoxNomeProdutosVenda.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            uJComboBoxNomeProdutosVenda.addItem(listaModelProdutos.get(i).getProdNome());
        }
    }

    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jTableVendas.getModel();
        listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();
        modelo.setNumRows(0);//seta o numero de linhas em ZERO para nao duplicar na tabela
        //insere as vendas na tabela
        int cont = listaModelVendasClientes.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasClientes.get(i).getModelVendas().getIdVenda(),
                listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
                bLDatas.formatarData(listaModelVendasClientes.get(i).getModelVendas().getVenDataVenda())
            });
        }
    }

    private void carregarOrçamentos() {
        DefaultTableModel modelo = (DefaultTableModel) jTableOrcamento.getModel();
        listaModelOrcamentoClientes = controllerOrcamentoCliente.getListaOrcamentoClienteController();
        modelo.setNumRows(0);//seta o numero de linhas em ZERO para nao duplicar na tabela
        //insere as vendas na tabela
        int cont = listaModelOrcamentoClientes.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelOrcamentoClientes.get(i).getModelOrcamento().getIdOrcamento(),
                listaModelOrcamentoClientes.get(i).getModelCliente().getCliNome(),
                bLDatas.formatarData(listaModelOrcamentoClientes.get(i).getModelOrcamento().getDataOrcamento())
            });
        }
    }

    private void habilitaDesabilitaCampos(boolean condicao) {
        jTextFieldCodigoClienteVenda.setEnabled(condicao);
        jTextFieldCodigoProdutoVenda.setEnabled(condicao);
        jTextFieldValorDoProdutoVenda.setEnabled(condicao);
        jTextFieldQuantidadeVenda.setEnabled(condicao);
        uJComboBoxNomeClienteProdutosVenda.setEnabled(condicao);
        uJComboBoxNomeProdutosVenda.setEnabled(condicao);
        jButtonSalvarVenda.setEnabled(condicao);
        jButtonAdicionarVenda.setEnabled(condicao);
    }

    private void limparVendas() {
        jTextFieldQuantidadeVenda.setText("");
        jTextFieldDescontoVenda.setText("0");
        jTextFieldValorBrutoVenda.setText("");
        jTextFieldTotalLiquidoVenda.setText("");
        jTextFieldNumeroVenda.setText("0");
        jTextFieldValorDoProdutoVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
        modelo.setNumRows(0);
    }

    //soma o valor total dos produtos da venda
    private void somarValorToralProdutos() {
        double soma = 0, valor;
        int cont = jTableProdutosVenda.getRowCount();//conta o total de linhas da tabela

        for (int i = 0; i < cont; i++) {
            valor = (double) jTableProdutosVenda.getValueAt(i, 4);
            soma = soma + valor;
        }
        jTextFieldValorBrutoVenda.setText(String.valueOf(bLMascaras.arredondamentoComPontoDuasCasasDouble(soma)));
        aplicarDesconto();
    }

    //Calcular o desconto sobre o valor total
    private void aplicarDesconto() {
        //DecimalFormat df = new DecimalFormat("#,###.00");//formata as casas decimais de um Double
        double desconto = Double.parseDouble(jTextFieldDescontoVenda.getText());
        double valorBruto = Double.parseDouble(jTextFieldValorBrutoVenda.getText());
        double valorLiquido = valorBruto - ((desconto / 100) * valorBruto);
        //jTextFieldTotalPagarVenda.setText("R$: " + String.valueOf(df.format(totalDesconto)));
        jTextFieldTotalLiquidoVenda.setText(String.valueOf(bLMascaras.arredondamentoComPontoDuasCasasDouble(valorLiquido)));
    }

    //carregar o código do produto assim que iniciar o programa
    private void carregarCodigoDoProduto() {
        try {
            modelProdutos = controllerProdutos.getProdutoController(uJComboBoxNomeProdutosVenda.getSelectedItem().toString());
            jTextFieldCodigoProdutoVenda.setText(String.valueOf(modelProdutos.getIdProduto()));
        } catch (Exception e) {
        }

    }

    //carregar o código do cliente assim que iniciar o programa
    private void carregarCodigoDoCliente() {
        try {
            modelCliente = controllerCliente.getClienteController(uJComboBoxNomeClienteProdutosVenda.getSelectedItem().toString());
            jTextFieldCodigoClienteVenda.setText(String.valueOf(modelCliente.getIdCliente()));
        } catch (Exception e) {
        }
    }

    //Carrega o valor do produto assim que iniciar o programa ou um produto for selecionado
    private void carregarValorProduto() {
        try {
            jTextFieldValorDoProdutoVenda.setText(String.valueOf("R$: " + modelProdutos.getProdValor()));
        } catch (Exception e) {
        }
    }

    private void pesquisarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableVendas.getModel();
        final TableRowSorter<DefaultTableModel> classificador = new TableRowSorter<>(modelo);
        this.jTableVendas.setRowSorter(classificador);
        String texto = jTextFieldPesquisarVendas.getText().toUpperCase();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }

    private void pesquisarOrcamento() {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableOrcamento.getModel();
        final TableRowSorter<DefaultTableModel> classificador = new TableRowSorter<>(modelo);
        this.jTableOrcamento.setRowSorter(classificador);
        String texto = jTextFieldPesquisarOrcamento.getText().toUpperCase();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }

    private void mudarFonteTabela() {// muda a fonte da tabela de vendas
        JTableHeader cabecalho = jTableProdutosVenda.getTableHeader();
        cabecalho.setFont(new Font("Maiandra GD", Font.PLAIN, 24));
        JTableHeader cabecalho2 = jTableVendas.getTableHeader();
        cabecalho2.setFont(new Font("Maiandra GD", Font.PLAIN, 24));
        JTableHeader cabecalho3 = jTableOrcamento.getTableHeader();
        cabecalho3.setFont(new Font("Maiandra GD", Font.PLAIN, 24));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarVenda;
    private javax.swing.JButton jButtonAlterarVenda;
    private javax.swing.JButton jButtonCancelarVenda;
    private javax.swing.JButton jButtonExcluirVenda;
    private javax.swing.JButton jButtonNovoVenda;
    private javax.swing.JButton jButtonPesquisarOrcamento;
    private javax.swing.JButton jButtonPesquisarOrcamento1;
    private javax.swing.JButton jButtonPesquisarVenda;
    private javax.swing.JButton jButtonRemoverProdutoVenda;
    private javax.swing.JButton jButtonSalvarVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableOrcamento;
    private javax.swing.JTable jTableProdutosVenda;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldCodigoClienteVenda;
    private javax.swing.JTextField jTextFieldCodigoProdutoVenda;
    private javax.swing.JTextField jTextFieldDescontoVenda;
    private javax.swing.JTextField jTextFieldNumeroVenda;
    private javax.swing.JTextField jTextFieldPesquisarOrcamento;
    private javax.swing.JTextField jTextFieldPesquisarVendas;
    private javax.swing.JTextField jTextFieldQuantidadeVenda;
    private javax.swing.JTextField jTextFieldTotalLiquidoVenda;
    private javax.swing.JTextField jTextFieldValorBrutoVenda;
    private javax.swing.JFormattedTextField jTextFieldValorDoProdutoVenda;
    private componentes.UJComboBox uJComboBoxNomeClienteProdutosVenda;
    private componentes.UJComboBox uJComboBoxNomeProdutosVenda;
    // End of variables declaration//GEN-END:variables
}
